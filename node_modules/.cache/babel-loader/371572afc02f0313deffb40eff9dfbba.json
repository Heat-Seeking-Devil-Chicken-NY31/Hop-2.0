{"ast":null,"code":"var _jsxFileName = \"/Users/yasir/Desktop/hop-project/src/pages/MyGigs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyGigs() {\n  _s();\n\n  const [gigs, setGigs] = useState(null);\n  useEffect(async () => {\n    // TODO get user's gigs where they are a provider or client\n    const uid = sessionStorage.getItem('uid');\n    const userGigs = await fetch(\"http://localhost:8080/userGigs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: uid\n      })\n    });\n    const userFormatted = await userGigs.json();\n    await setGigs(userFormatted);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), gigs && gigs.map(gig => /*#__PURE__*/_jsxDEV(Card, {\n      id: gig._id,\n      title: gig.title,\n      city: gig.city,\n      desc: gig.desc,\n      rate: gig.rate,\n      schedule: gig.schedule,\n      startDate: gig.startDate,\n      provider: gig.provider,\n      client: gig.client,\n      staffCard: false\n    }, gig._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyGigs, \"KOBnfLmtAD6pjF6zvYfANxGkGqM=\");\n\n_c = MyGigs;\nexport default MyGigs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyGigs\");","map":{"version":3,"sources":["/Users/yasir/Desktop/hop-project/src/pages/MyGigs.js"],"names":["React","useEffect","useState","Card","Navbar","MyGigs","gigs","setGigs","uid","sessionStorage","getItem","userGigs","fetch","method","headers","body","JSON","stringify","username","userFormatted","json","map","gig","_id","title","city","desc","rate","schedule","startDate","provider","client"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB;AAEA,UAAMO,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFoD;AAG7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAEV;AADS,OAAf;AAHuD,KAAnC,CAA5B;AAQA,UAAMW,aAAa,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA5B;AACA,UAAMb,OAAO,CAACY,aAAD,CAAb;AACD,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGb,IAAI,IACHA,IAAI,CAACe,GAAL,CAAUC,GAAD,iBACP,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEA,GAAG,CAACC,GAFV;AAGE,MAAA,KAAK,EAAED,GAAG,CAACE,KAHb;AAIE,MAAA,IAAI,EAAEF,GAAG,CAACG,IAJZ;AAKE,MAAA,IAAI,EAAEH,GAAG,CAACI,IALZ;AAME,MAAA,IAAI,EAAEJ,GAAG,CAACK,IANZ;AAOE,MAAA,QAAQ,EAAEL,GAAG,CAACM,QAPhB;AAQE,MAAA,SAAS,EAAEN,GAAG,CAACO,SARjB;AASE,MAAA,QAAQ,EAAEP,GAAG,CAACQ,QAThB;AAUE,MAAA,MAAM,EAAER,GAAG,CAACS,MAVd;AAWE,MAAA,SAAS,EAAE;AAXb,OACOT,GAAG,CAACC,GADX;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAxCQlB,M;;KAAAA,M;AA0CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card\";\nimport Navbar from \"../components/Navbar\";\n\nfunction MyGigs() {\n  const [gigs, setGigs] = useState(null);\n\n  useEffect(async () => {\n    // TODO get user's gigs where they are a provider or client\n    \n    const uid = sessionStorage.getItem('uid');\n    const userGigs = await fetch(\"http://localhost:8080/userGigs\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },  \n      body: JSON.stringify({\n        username: uid\n      })\n    });\n   \n    const userFormatted = await userGigs.json()\n    await setGigs(userFormatted);\n  }, []);\n  return (\n    <div>\n      <Navbar />\n\n      {gigs &&\n        gigs.map((gig) => (\n          <Card\n            key={gig._id}\n            id={gig._id}\n            title={gig.title}\n            city={gig.city}\n            desc={gig.desc}\n            rate={gig.rate}\n            schedule={gig.schedule}\n            startDate={gig.startDate}\n            provider={gig.provider}\n            client={gig.client}\n            staffCard={false}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default MyGigs;\n"]},"metadata":{},"sourceType":"module"}