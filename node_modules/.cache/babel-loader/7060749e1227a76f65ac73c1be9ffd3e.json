{"ast":null,"code":"var _jsxFileName = \"/Users/ariel32lubin/hop-project/src/pages/StaffGig.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../components/Card\"; // TODO get 10 most recent gig cards\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gigs = [{\n  title: \"gig\",\n  city: \"city\",\n  rate: \"rate\",\n  desc: \"desc\",\n  schedule: \"schedule\",\n  startDate: \"startDate\"\n}]; // User can filter gigs by cities: NYC, LA, and Chicago.\n\nfunction StaffGig() {\n  _s();\n\n  const [city, setcity] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: handleChange,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Chicago\",\n        children: \"Chicago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"New York City\",\n        children: \"New York City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Los Angeles\",\n        children: \"Los Angeles \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), gigs && gigs.map(gig => /*#__PURE__*/_jsxDEV(Card, {\n      title: gig.title,\n      city: gig.city,\n      desc: gig.desc,\n      rate: gig.rate,\n      schedule: gig.schedule,\n      startDate: gig.startDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StaffGig, \"veZw1helPZfjjBbEXZuMIDRUtmk=\");\n\n_c = StaffGig;\nexport default StaffGig;\n\nvar _c;\n\n$RefreshReg$(_c, \"StaffGig\");","map":{"version":3,"sources":["/Users/ariel32lubin/hop-project/src/pages/StaffGig.js"],"names":["React","Card","gigs","title","city","rate","desc","schedule","startDate","StaffGig","setcity","useState","handleChange","map","gig"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;AACA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,IAAI,EAAE,MAJR;AAKEC,EAAAA,QAAQ,EAAE,UALZ;AAMEC,EAAAA,SAAS,EAAE;AANb,CADW,CAAb,C,CAWA;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBC,QAAQ,CAAC,IAAD,CAAhC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAEC,YAAf;AAA6B,MAAA,QAAQ,EAAEA,YAAvC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGV,IAAI,IACHA,IAAI,CAACW,GAAL,CAAUC,GAAD,iBACP,QAAC,IAAD;AACE,MAAA,KAAK,EAAEA,GAAG,CAACX,KADb;AAEE,MAAA,IAAI,EAAEW,GAAG,CAACV,IAFZ;AAGE,MAAA,IAAI,EAAEU,GAAG,CAACR,IAHZ;AAIE,MAAA,IAAI,EAAEQ,GAAG,CAACT,IAJZ;AAKE,MAAA,QAAQ,EAAES,GAAG,CAACP,QALhB;AAME,MAAA,SAAS,EAAEO,GAAG,CAACN;AANjB;AAAA;AAAA;AAAA;AAAA,YADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvBQC,Q;;KAAAA,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../components/Card\";\n\n// TODO get 10 most recent gig cards\nconst gigs = [\n  {\n    title: \"gig\",\n    city: \"city\",\n    rate: \"rate\",\n    desc: \"desc\",\n    schedule: \"schedule\",\n    startDate: \"startDate\",\n  },\n];\n\n// User can filter gigs by cities: NYC, LA, and Chicago.\n\nfunction StaffGig() {\n  const [city, setcity] = useState(null);\n\n  return (\n    <div>\n      <select value={handleChange} onChange={handleChange}>\n        <option value=\"Chicago\">Chicago</option>\n        <option value=\"New York City\">New York City</option>\n        <option value=\"Los Angeles\">Los Angeles </option>\n      </select>\n      {gigs &&\n        gigs.map((gig) => (\n          <Card\n            title={gig.title}\n            city={gig.city}\n            desc={gig.desc}\n            rate={gig.rate}\n            schedule={gig.schedule}\n            startDate={gig.startDate}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default StaffGig;\n"]},"metadata":{},"sourceType":"module"}