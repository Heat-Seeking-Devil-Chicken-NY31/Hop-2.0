[{"/Users/yasir/Desktop/hop-project/src/index.js":"1","/Users/yasir/Desktop/hop-project/src/pages/Login.js":"2","/Users/yasir/Desktop/hop-project/src/pages/MyGigs.js":"3","/Users/yasir/Desktop/hop-project/src/pages/StaffGig.js":"4","/Users/yasir/Desktop/hop-project/src/pages/Home.js":"5","/Users/yasir/Desktop/hop-project/src/pages/PostGig.js":"6","/Users/yasir/Desktop/hop-project/src/components/Navbar.js":"7","/Users/yasir/Desktop/hop-project/src/components/Card.js":"8","/Users/yasir/Desktop/hop-project/src/services/firebase.js":"9"},{"size":860,"mtime":1645547516687,"results":"10","hashOfConfig":"11"},{"size":606,"mtime":1645547553282,"results":"12","hashOfConfig":"11"},{"size":1161,"mtime":1645554284750,"results":"13","hashOfConfig":"11"},{"size":1667,"mtime":1645554461055,"results":"14","hashOfConfig":"11"},{"size":470,"mtime":1645460170883,"results":"15","hashOfConfig":"11"},{"size":2653,"mtime":1645554129662,"results":"16","hashOfConfig":"11"},{"size":1406,"mtime":1645460170882,"results":"17","hashOfConfig":"11"},{"size":1585,"mtime":1645554119557,"results":"18","hashOfConfig":"11"},{"size":1656,"mtime":1645547765138,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"o7z2ez",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"24"},"/Users/yasir/Desktop/hop-project/src/index.js",["53"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport PostGig from \"./pages/PostGig\";\nimport StaffGig from \"./pages/StaffGig\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./pages/Login\";\nimport MyGigs from \"./pages/MyGigs\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"Login\" element={<Login />} />\n        <Route path=\"PostGig\" element={<PostGig />} />\n        <Route path=\"StaffGig\" element={<StaffGig />} />\n        <Route path=\"MyGigs\" element={<MyGigs />} />\n        <Route path=\"Login\" element={<Login />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n",["54","55"],"/Users/yasir/Desktop/hop-project/src/pages/Login.js",["56"],[],"/Users/yasir/Desktop/hop-project/src/pages/MyGigs.js",["57"],[],"import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card\";\nimport Navbar from \"../components/Navbar\";\n\nfunction MyGigs() {\n  const [gigs, setGigs] = useState(null);\n\n  useEffect(async () => {\n    // TODO get user's gigs where they are a provider or client\n    \n    const uid = sessionStorage.getItem('uid');\n    const userGigs = await fetch(\"http://localhost:8080/userGigs\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },  \n      body: JSON.stringify({\n        username: uid\n      })\n    });\n   \n    const userFormatted = await userGigs.json()\n    await setGigs(userFormatted);\n  }, []);\n  return (\n    <div>\n      <Navbar />\n\n      {gigs &&\n        gigs.map((gig) => (\n          <Card\n            key={gig._id}\n            id={gig._id}\n            title={gig.title}\n            city={gig.city}\n            desc={gig.desc}\n            rate={gig.hourly_rate}\n            schedule={gig.schedule}\n            startDate={gig.startDate}\n            provider={gig.provider}\n            client={gig.client}\n            staffCard={false}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default MyGigs;\n","/Users/yasir/Desktop/hop-project/src/pages/StaffGig.js",["58","59"],[],"/Users/yasir/Desktop/hop-project/src/pages/Home.js",[],[],"/Users/yasir/Desktop/hop-project/src/pages/PostGig.js",["60","61","62","63"],[],"import React, { useEffect, useState } from \"react\";\nimport signInWithGoogle from \"../services/firebase\";\nimport ReactDOM from \"react-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\n\nfunction PostGig() {\n  const [inputs, setInputs] = useState({});\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs((values) => ({ ...values, [name]: value }));\n  };\n  const navigate = useNavigate();\n // TODO post gig in DB\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const uid = sessionStorage.getItem('uid');\n    const postGig = await fetch(\"http://localhost:8080/createGig\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },  \n      body: JSON.stringify({\n        title: inputs.title,\n        city: inputs.city,\n        hourly_rate: inputs.hourlyRate,\n         description: inputs.description,\n          schedule: inputs.schedule, \n          startDate:  inputs.startDate,\n        username_created_by: uid\n      })\n    });\n    \n    await navigate(\"/MyGigs\");\n   \n  };\n   \n   \n  \n\n  return (\n    <>\n      <Navbar />\n      <form className=\"m-auto w-100 d-flex justify-content-center\" onSubmit={handleSubmit}>\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={inputs.title || \"\"}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          City:\n          <input\n            type=\"text\"\n            name=\"city\"\n            value={inputs.city || \"\"}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Rate:\n          <input\n            type=\"text\"\n            name=\"hourlyRate\"\n            value={inputs.hourlyRate || \"\"}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={inputs.description || \"\"}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Schedule:\n          <input\n            type=\"text\"\n            name=\"schedule\"\n            value={inputs.schedule || \"\"}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Start Date:\n          <input\n            type=\"date\"\n            name=\"startDate\"\n            value={inputs.startDate || \"\"}\n            onChange={handleChange}\n          />\n        </label>\n        <input className=\"btn-primary\" type=\"submit\" />\n      </form>\n    </>\n  );\n}\n\nexport default PostGig;\n","/Users/yasir/Desktop/hop-project/src/components/Navbar.js",[],[],"/Users/yasir/Desktop/hop-project/src/components/Card.js",["64"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Card({\n  id,\n  title,\n  city,\n  rate,\n  desc,\n  schedule,\n  startDate,\n  staffCard,\n  provider,\n  client,\n}) {\n  \n  const navigate = useNavigate();\n\n  const staffGig = async () => {\n    // TODO adds user as the provider for the selected gig\n    const uid = sessionStorage.getItem('uid');\n    console.log(id)\n   \n    const userFetch = await fetch(\"http://localhost:8080/addGig\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },  \n      body: JSON.stringify({\n        user_username: uid,\n        job_id: id,\n      })\n    });\n\n    await navigate(\"/MyGigs\");\n  };\n  return (\n    <div className=\"w-50 m-auto\">\n      <div className=\"card position-relative mt-4 m-auto px-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <div className=\"position-absolute top-0 end-0 m-2\">${rate}/hr</div>\n          <ul>\n            <li className=\"card-text\">City: {city}</li>\n            <li>Description: {desc}</li>\n            <li className=\"card-text\">Schedule: {schedule}</li>\n            <li className=\"card-text\">Start Date: {startDate}</li>\n            {!staffCard && <li className=\"card-text\">Provider: {provider}</li>}\n            {!staffCard && <li className=\"card-text\">Client: {client}</li>}\n          </ul>\n          {staffCard && (\n            <button onClick={staffGig} className=\"btn-primary\">\n              Staff Gig\n            </button>\n          )}\n        </div>\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default Card;\n","/Users/yasir/Desktop/hop-project/src/services/firebase.js",["65","66","67","68","69","70","71","72","73"],[],"import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signInWithRedirect,\n} from \"firebase/auth\";\nimport { Route } from \"react-router-dom\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqS_gKkZJIlW4KUdW0x3XFvNBgZuhuQsw\",\n  authDomain: \"react-template-c8bf7.firebaseapp.com\",\n  projectId: \"react-template-c8bf7\",\n  storageBucket: \"react-template-c8bf7.appspot.com\",\n  messagingSenderId: \"327870582787\",\n  appId: \"1:327870582787:web:550f9d61cb735e371efe36\",\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\n\nexport default async function signInWithGoogle() {\n  await signInWithPopup(auth, provider)\n    .then(async (result) => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n      const register = await fetch(\"http://localhost:8080/register\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },  \n      body: JSON.stringify({\n        username: user.uid\n      })\n    });\n      sessionStorage.setItem(\"uid\", user.uid);\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n    });\n}\n",{"ruleId":"74","severity":1,"message":"75","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":14},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":8,"column":13,"nodeType":"85","endLine":22,"endColumn":4},{"ruleId":"83","severity":1,"message":"84","line":8,"column":13,"nodeType":"85","endLine":14,"endColumn":4},{"ruleId":"83","severity":1,"message":"84","line":20,"column":13,"nodeType":"85","endLine":34,"endColumn":4},{"ruleId":"74","severity":1,"message":"82","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"86","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":24},{"ruleId":"74","severity":1,"message":"87","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"88","line":20,"column":11,"nodeType":"76","messageId":"77","endLine":20,"endColumn":18},{"ruleId":"74","severity":1,"message":"89","line":24,"column":11,"nodeType":"76","messageId":"77","endLine":24,"endColumn":20},{"ruleId":"74","severity":1,"message":"90","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"91","line":9,"column":3,"nodeType":"76","messageId":"77","endLine":9,"endColumn":21},{"ruleId":"74","severity":1,"message":"92","line":11,"column":10,"nodeType":"76","messageId":"77","endLine":11,"endColumn":15},{"ruleId":"74","severity":1,"message":"93","line":30,"column":13,"nodeType":"76","messageId":"77","endLine":30,"endColumn":18},{"ruleId":"74","severity":1,"message":"94","line":32,"column":13,"nodeType":"76","messageId":"77","endLine":32,"endColumn":21},{"ruleId":"74","severity":1,"message":"95","line":43,"column":13,"nodeType":"76","messageId":"77","endLine":43,"endColumn":22},{"ruleId":"74","severity":1,"message":"96","line":44,"column":13,"nodeType":"76","messageId":"77","endLine":44,"endColumn":25},{"ruleId":"74","severity":1,"message":"97","line":46,"column":13,"nodeType":"76","messageId":"77","endLine":46,"endColumn":18},{"ruleId":"74","severity":1,"message":"98","line":48,"column":13,"nodeType":"76","messageId":"77","endLine":48,"endColumn":23},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'useEffect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'signInWithGoogle' is defined but never used.","'ReactDOM' is defined but never used.","'postGig' is assigned a value but never used.","'userFetch' is assigned a value but never used.","'useNavigate' is defined but never used.","'signInWithRedirect' is defined but never used.","'Route' is defined but never used.","'token' is assigned a value but never used.","'register' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]